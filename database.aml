# This file can be load on the website https://azimutt.app

#=========# USERS #=========#

users | Represents a user of the website
  id int pk | ID of the user
  username varchar(255) unique | Formatting: surname.name
  email varchar(255) unique | Formatting: surname.name@amicalecore.org
  password text nullable | Bcrypt hash of the password
  validation_code varchar(9) nullable | Code used to set the password for the first login
  group_id int | Group of permissions
  specific_permissions text nullable | Specific permissions for the user
  created_at date | Indicate when the user has been created
  updateAt date | Indicate when the user has been updated

groups | Represents a group
  id int pk | ID of the group
  name varchar(255) unique | Name of the group
  permissions text | Permissions of the group (serialized array)

# FKs
fk users.group_id -> groups.id


#=========# MEMBERS #=========#

members | A user is created after the "/register" command on Discord
  id int pk | ID of the member
  discord_id int unique | ID of the member on Discord
  link_code varchar(9) nullable | Code used to link the member to his Discord account
  first_name varchar(255) | The surname of the member
  last_name varchar(255) | The name of the member
  email varchar(255) nullable | The email of the member
  membership_date date nullable | Set when the member pays his membership
  created_at date | Indicate when the member has been created
  updated_at date | Indicate when the member has been updated

personal_accounts | Represents the personal account of a member
  id int pk | ID of the account
  member_id int unique | Member owner of the account
  card_id text unique | ID of the student card's QR code
  amount number = 0.0 | Amount of money in the account
  created_at date | Indicate when the account has been created
  updated_at date | Indicate when the account has been updated

# FKs
fk personal_accounts.member_id -> members.id


#=========# PRODUCTS #=========#

product_categories | Represents the category of a product
  id int pk | ID of the category
  name varchar(255) unique | Name of the category

products | Represents a product
  id int pk | ID of the product
  name varchar(255) unique | Name of the product
  unit_price number | Price of one unit of the product
  category_id int | ID of the category of the product
  picture_id int nullable | ID of the picture of the product
  alert_amount int = 0 | Amount of product under which an alert is sent
  created_at date | Indicate when the product has been created

inventory | Represents the stock of a product
  product_id int pk | ID of the product
  amount int = 0 | Amount of product in stock
  created_at date | Indicate when the stock has been created

product_movements | Represents a movement of a product (refill, sale, stock correction)
  id int pk | ID of the movement
  operation_code varchar(9) | code of the operation (pointing of the refill, sale or stock correction code field)
  product_id int | ID of the product
  amount int | Amount of product (+ or -)
  movement_type int | Type of the movement (1: Refill, 2: Sale, 3: Stock correction) [hardcoded enum]
  process_date datetime nullable | Indicate when the movement has been processed, null if not processed
  created_at date | Indicate when the movement has been created

sales | Represents a sale of a pack of products
  code varchar(9) pk | Formatting: (c|s|p) + randCode
  author_id int | ID of the user who created the sale
  type_id int | ID of the type of the sale (1: Cash, 2: SumUp, 3: Personal account) [hardcoded enum]
  amount number | Amount of the sale
  discount_code varchar(9) nullable | Code of the discount used
  process_date datetime nullable | Indicate when the sell has been processed, null if not processed
  cancel_date datetime nullable | Indicate when the sell has been canceled, null if not canceled (can only be cancel by user who created the sell, if the sell has not been processed, and in a delay of 5 minutes)
  created_at date | Indicate when the sell has been created

refill | Represents a refill of the stock
  code varchar(9) pk | Formatting: "r" + randCode
  transaction_code varchar(15) unique | ID of the transaction
  created_at date | Indicate when the refill has been created

inventory_corrections | Represents a correction of the stock
  code varchar(9) pk | Formatting: "c" + randCode
  author_id int | ID of the user who created the correction
  created_at date | Indicate when the correction has been created

shrinkage | Represents a shrinkage of the stock (only affected by inventory corrections)
  product_movement_id int pk | ID of the product movement
  amount int | Amount of product shrinked
  created_at date | Indicate when the shrinkage has been created

discount_codes | Represents a discount code
  code varchar(9) pk | Formatting: "d" + randCode
  amount number | Amount of the discount
  is_percentage boolean | Indicate if the discount is a percentage
  validity_start datetime | Indicate when the discount code is valid
  validity_end datetime nullable | Indicate when the discount code is not valid anymore, null if no end date
  created_at date | Indicate when the discount code has been created

# FKs
fk sales.author_id -> users.id
fk products.category_id -> product_categories.id
fk products.picture_id -> pictures.id
fk inventory.product_id -> products.id
fk product_movements.operation_code -> refill.code
fk product_movements.operation_code -> sales.code
fk product_movements.operation_code -> inventory_corrections.code
fk product_movements.product_id -> products.id
fk refill.transaction_code -> transactions.code
fk inventory_corrections.author_id -> users.id
fk shrinkage.product_movement_id -> product_movements.id
fk discount_codes.code -> sales.discount_code


#=========# TRANSACTIONS #=========#

financial_accounts | Represents an financial account
  id int pk | ID of the account
  name varchar(255) unique | Name of the account
  amount number = 0.0 | Amount of money in the account
  account_category int | Number of the account category (only category 5)
  created_at date | Indicate when the account has been created
  updated_at date | Indicate when the account has been updated

transactions | Represents a transaction between two accounts (source and target can be external accounts)
  code varchar(15) pk | Formatting : src + tgt + type + randCode
  description text nullable
  billing_id int nullable unique | ID of the billing if the transaction is linked to one (for future billing scanning)
  author_id varchar(255) nullable | ID of the user who created the transaction, null if done by the system
  category_id int | ID of the category of the transaction
  account_id int nullable | ID of the financial account, null if external
  amount number | Amount of the transaction (+ or -)
  correction_id int nullable | ID of the correction if the transaction has been corrected
  created_at date

transaction_categories | Represents the category of a transaction (as many categories as needed)
  id int pk
  name varchar(255) unique

periodic_transaction
  id int pk | ID of the periodic transaction
  description text nullable | Description of the transaction
  category_id int | ID of the category of the transaction
  source int nullable | ID of the source account, null if external
  target int nullable | ID of the target account, null if external
  amount number | Amount of the transaction
  start_date date | Indicate the date of the first transaction
  next_date date | Indicate when the periodic transaction has to be done
  period varchar(255) | Frequency of the periodic transaction (daily, weekly, monthly, yearly)
  created_at date | Indicate when the periodic transaction has been created
  updated_at date | Indicate when the periodic transaction has been updated

transaction_correction | Represents a correction of a transaction
  id int pk | ID of the correction
  type_id int | ID of the type of the correction
  reason text | Reason of the correction
  transaction_code varchar(15) | Code of the transaction to correct

correction_types | Represents the type of a correction (cashier error for example)
  id int pk | ID of the correction type
  name varchar(255) unique | Name of the correction type

personal_transactions | Represents a transaction on a personal account (refill or product purchase)
  code varchar(15) pk | Formatting: accountId + type + randCode
  account_id int | ID of the personal account (the member id)
  amount number | Amount of the transaction
  flow varchar(255) | Flow of the transaction (debit or credit)
  sale_code varchar(9) nullable | ID of the sell, only if the transaction is a product purchase
  created_at date | Indicate when the transaction has been created

# FKs
fk transactions.category_id -> transaction_categories.id
fk transactions.account_id -> financial_accounts.id
fk transactions.author_id -> users.id
fk transactions.billing_id -> pictures.id
fk personal_transactions.account_id -> personal_accounts.id
fk personal_transactions.sale_code -> sales.code
fk periodic_transaction.category_id -> transaction_categories.id
fk periodic_transaction.source -> financial_accounts.id
fk periodic_transaction.target -> financial_accounts.id
fk transaction_correction.type_id -> correction_types.id
fk transaction_correction.transaction_code -> transactions.code
fk transactions.correction_id -> transaction_correction.id


#=========# PICTURES #=========#

pictures | Represents a picture
  id int pk | ID of the picture
  name varchar(255) unique | Name of the picture
  path text unique | Path of the picture
  type varchar(255) | Type of the picture (Billing or Product) [hardcoded enum]
  created_at date | Indicate when the picture has been created
  updated_at date | Indicate when the picture has been updated

#=========# DONATIONS #=========#

donations | Represents a donation
  id int pk | ID of the donation
  transaction_code varchar(15) unique | ID of the transaction
  member_id int nullable | ID of the member who made the donation
  created_at date | Indicate when the donation has been created

# FKs
fk donations.transaction_code -> transactions.code
fk donations.member_id -> members.id

#=========# LOGS #=========#

logs | Represents a operation log
  reference varchar(15) pk | Reference of the log (can be a sale code, a transaction code, a product movement id, etc.)
  type varchar(255) | Type of the log (sale, transaction, product movement, etc.) [hardcoded enum]
  state varchar(255) | State of the log (created, processed, etc.) [hardcoded enum]
  message text nullable | Message of the log if needed (error message for example)
